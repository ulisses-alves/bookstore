{"version":3,"sources":["bookstore.js","book/book-ctrl.js","bookshelf/bookshelf-ctrl.js","bookshelf/bookshelf.js","core/books.js","core/core.js","core/settings.js","core/truncate.js","home/home-ctrl.js"],"names":["angular","module","config","$routeProvider","when","templateUrl","controller","otherwise","$scope","$routeParams","Books","book","get","id","directive","restrict","scope","books","factory","$resource","settings","createBookModel","info","volumeInfo","images","imageLinks","thumbnail","cover","large","medium","small","title","description","authors","api","query","method","isArray","params","maxResults","q","transformResponse","data","fromJson","items","map","cancellable","constant","filter","input","length","substring","search","$cancelRequest","searchText"],"mappings":"AAAAA,QAAAC,OAAA,aACA,UACA,aACA,YACA,iBACA,iBACA,iBACA,wBAEAC,OAAA,SAAAC,gBACAA,eACAC,KAAA,KACAC,YAAA,sBACAC,WAAA,aAEAF,KAAA,aACAC,YAAA,sBACAC,WAAA,aAEAC,UAAA,OCnBAP,QAAAC,OAAA,qBACAK,WAAA,WAAA,SAAAE,OAAAC,aAAAC,OACAF,OAAAG,KAAAD,MAAAE,KAAAC,GAAAJ,aAAAI,OCFAb,QAAAC,OAAA,qCACAK,WAAA,gBAAA,cCDAN,QAAAC,OAAA,uBACA,mCAEAa,UAAA,YAAA,WACA,OACAT,YAAA,2BACAC,WAAA,gBACAS,SAAA,IACAC,OACAC,MAAA,QCTAjB,QAAAC,OAAA,2BACAiB,QAAA,QAAA,SAAAC,UAAAC,UACA,QAAAC,iBAAAV,MACA,GAAAW,MAAAX,KAAAY,WACAC,OAAAF,KAAAG,UAEA,QACAZ,GAAAF,KAAAE,GACAa,UAAAF,QAAAA,OAAAE,UACAC,MAAAH,SAAAA,OAAAI,OACAJ,OAAAK,QACAL,OAAAM,OACAN,OAAAE,WACAK,MAAAT,KAAAS,MACAC,YAAAV,KAAAU,YACAC,QAAAX,KAAAW,SAIA,MAAAd,WAAAC,SAAAc,KACArB,GAAA,QAEAsB,OACAC,OAAA,MACAC,SAAA,EACAC,QACAC,WAAA,GACAC,EAAA,KAEAC,kBAAA,SAAAC,MACA,MAAA1C,SAAA2C,SAAAD,MAAAE,MAAAC,IAAAxB,mBAGAT,KACAwB,OAAA,MACAK,kBAAA,SAAAC,MACA,MAAArB,iBAAArB,QAAA2C,SAAAD,WAIAI,aAAA,MCxCA9C,QAAAC,OAAA,kBACA,0BACA,uBACA,4BCHAD,QAAAC,OAAA,8BACA8C,SAAA,YACAb,IAAA,oDCFAlC,QAAAC,OAAA,8BACA+C,OAAA,WAAA,WACA,MAAA,UAAAC,MAAAC,QACA,MAAAD,OAAAC,OAAAA,OACAD,MAAAE,UAAA,EAAAD,QAAA,MACAD,SCLAjD,QAAAC,OAAA,qBACAK,WAAA,WAAA,SAAAE,OAAAE,OACAF,OAAAS,MAAAP,MAAAyB,QAEA3B,OAAA4C,OAAA,WACA5C,OAAAS,MAAAoC,iBACA7C,OAAAS,MAAAP,MAAAyB,OAAAK,EAAAhC,OAAA8C,YAAA","file":"bookstore.min.js","sourcesContent":["angular.module('bookstore', [\n  'ngRoute',\n  'ngResource',\n  'ngAnimate',\n  'bookstore.core',\n  'bookstore.home',\n  'bookstore.book',\n  'bookstore.bookshelf'\n])\n.config(function ($routeProvider) {\n  $routeProvider\n    .when('/', {\n      templateUrl: 'templates/home.html',\n      controller: 'HomeCtrl'\n    })\n    .when('/book/:id', {\n      templateUrl: 'templates/book.html',\n      controller: 'BookCtrl'\n    })\n    .otherwise('/')\n})\n","angular.module('bookstore.book', [])\n.controller('BookCtrl', function ($scope, $routeParams, Books) {\n  $scope.book = Books.get({id: $routeParams.id})\n})\n","angular.module('bookstore.bookshelf.controller', [])\n.controller('BookshelfCtrl', function () {})\n","angular.module('bookstore.bookshelf', [\n  'bookstore.bookshelf.controller'\n])\n.directive('bookshelf', function () {\n  return {\n    templateUrl: 'templates/bookshelf.html',\n    controller: 'BookshelfCtrl',\n    restrict: 'E',\n    scope: {\n      books: '='\n    }\n  }\n})\n","angular.module('bookstore.core.books', [])\n.factory('Books', function ($resource, settings) {\n  function createBookModel(book) {\n    var info = book.volumeInfo\n    var images = info.imageLinks\n\n    return {\n      id: book.id,\n      thumbnail: images && images.thumbnail,\n      cover: images && (images.large\n          || images.medium\n          || images.small\n          || images.thumbnail),\n      title: info.title,\n      description: info.description,\n      authors: info.authors\n    }\n  }\n\n  return $resource(settings.api,\n    {id: '@id'},\n    {\n      query: {\n        method: 'GET',\n        isArray: true,\n        params: {\n          maxResults: 40,\n          q: '.'\n        },\n        transformResponse: function (data) {\n          return angular.fromJson(data).items.map(createBookModel)\n        }\n      },\n      get: {\n        method: 'GET',\n        transformResponse: function (data) {\n          return createBookModel(angular.fromJson(data))\n        }\n      }\n    },\n    {cancellable: true}\n  );\n})\n","angular.module('bookstore.core', [\n  'bookstore.core.truncate',\n  'bookstore.core.books',\n  'bookstore.core.settings',\n])\n","angular.module('bookstore.core.settings', [])\n.constant('settings', {\n  api: 'https://www.googleapis.com/books/v1/volumes/:id'\n})\n","angular.module('bookstore.core.truncate', [])\n.filter('truncate', function () {\n  return function (input, length) {\n    return input.length > length\n      ? input.substring(0, length) + '...'\n      : input\n  }\n})\n","angular.module('bookstore.home', [])\n.controller('HomeCtrl', function ($scope, Books) {\n  $scope.books = Books.query()\n\n  $scope.search = function () {\n    $scope.books.$cancelRequest()\n    $scope.books = Books.query({q: $scope.searchText || '.'})\n  }\n})\n"],"sourceRoot":"/source/"}